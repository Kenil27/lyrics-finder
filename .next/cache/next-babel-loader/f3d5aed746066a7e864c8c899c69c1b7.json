{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/kenil/kenil/lyrics/pages/index.js\";\nimport React from 'react';\nimport { app, auth, db } from './firebase';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../style.css';\nimport { InputGroup, InputGroupAddon, Button, Input, Container, Row, Col, Badge } from 'reactstrap';\n\nclass Home extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      value: '',\n      result: [{\n        name: '',\n        lyric: ''\n      }],\n      searchLoader: true,\n      isResult: false,\n      fetchData: false\n    });\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      auth.signInAnonymously().catch(function (error) {\n        this.errorMessage = error.message;\n      });\n      this.listenToAuth();\n    });\n\n    _defineProperty(this, \"listenToAuth\", () => {\n      app.auth().onAuthStateChanged(user => {\n        if (user) {\n          // User is signed in.\n          this.userId = user.uid;\n        } else {\n          // User is signed out.\n          this.userId = null;\n        }\n      });\n    });\n\n    _defineProperty(this, \"handleInput\", event => {\n      this.setState({\n        value: event.target.value\n      });\n\n      if (event.target.value === '') {\n        this.setState({\n          isResult: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"onInputKeyPress\", e => {\n      // on pressing enter\n      if (e.which === 13) {\n        this.handleSearch();\n      }\n    });\n\n    _defineProperty(this, \"handleSearch\", () => {\n      var self = this;\n      self.setState({\n        searchLoader: true,\n        isResult: false,\n        fetchData: true\n      });\n      let res = db.collection(\"stavan\").where(\"name\", \"==\", \"\".concat(this.state.value.toLowerCase()));\n      res.get().then(querySnapshot => {\n        if (querySnapshot.docs.length > 0) {\n          querySnapshot.forEach(doc => {\n            const {\n              name,\n              lyrics\n            } = doc.data();\n            let lyric = lyrics.replace(new RegExp(/(\\\\n)+/g), '\\n');\n            self.setState({\n              result: [{\n                name,\n                lyric\n              }],\n              searchLoader: true,\n              fetchData: true\n            }, () => {\n              self.setState({\n                searchLoader: false\n              });\n            });\n          });\n        } else {\n          self.setState({\n            isResult: true,\n            fetchData: false\n          });\n        }\n      });\n    });\n  }\n\n  render() {\n    let {\n      result,\n      searchLoader,\n      fetchData,\n      isResult\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Lyrics Finder\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Find Lyrics for any stavan\"), React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"Search by stavan name...\",\n      autoFocus: true,\n      value: this.state.value,\n      onChange: this.handleInput.bind(this),\n      onKeyPress: this.onInputKeyPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(InputGroupAddon, {\n      addonType: \"append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.handleSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Search\"))), searchLoader ? fetchData ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"/static/loader.gif\",\n      alt: \"\",\n      width: \"100px\",\n      height: \"100px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })) : !isResult ? null : React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Badge, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, 'We currently do not have \\n any lyrics for this song.'))))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, result[0].name.toUpperCase())), React.createElement(\"div\", {\n      className: \"result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, result[0].lyric.toLowerCase())));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/kenil/kenil/lyrics/pages/index.js"],"names":["React","app","auth","db","InputGroup","InputGroupAddon","Button","Input","Container","Row","Col","Badge","Home","Component","value","result","name","lyric","searchLoader","isResult","fetchData","signInAnonymously","catch","error","errorMessage","message","listenToAuth","onAuthStateChanged","user","userId","uid","event","setState","target","e","which","handleSearch","self","res","collection","where","state","toLowerCase","get","then","querySnapshot","docs","length","forEach","doc","lyrics","data","replace","RegExp","render","handleInput","bind","onInputKeyPress","toUpperCase"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {app,auth,db} from './firebase';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport '../style.css';\nimport { InputGroup, InputGroupAddon, Button, Input, Container, Row, Col , Badge} from 'reactstrap';\n\nclass Home extends React.Component {\n  state = {\n    value : '',\n    result: [{name : '', lyric : ''}], \n    searchLoader : true, \n    isResult : false, \n    fetchData : false\n  }\n\n  componentDidMount = () => {\n    auth.signInAnonymously().catch(function(error) {\n      this.errorMessage = error.message\n    });\n    this.listenToAuth() \n  } \n  \n  listenToAuth = () => {\n    app.auth().onAuthStateChanged((user) => {\n      if (user) {    \n        // User is signed in.\n        this.userId = user.uid;\n      } else {\n        // User is signed out.\n        this.userId = null\n      }\n    });\n  }\n\n  handleInput = (event) =>{\n    this.setState({value : event.target.value})\n    if(event.target.value === ''){\n      this.setState({isResult: false})\n    }\n  }\n\n  onInputKeyPress = (e) => {\n    // on pressing enter\n    if(e.which === 13){\n      this.handleSearch()\n    }\n  }\n\n  handleSearch = () =>{\n    var self = this;\n    self.setState({searchLoader : true, isResult : false, fetchData : true})\n      let res= db.collection(\"stavan\").where(\"name\" , \"==\", `${this.state.value.toLowerCase()}`)\n\n      res.get()\n      .then(querySnapshot => {\n        if(querySnapshot.docs.length > 0){\n        querySnapshot.forEach(doc => {\n          const { name, lyrics } = doc.data()\n          let lyric = lyrics.replace(new RegExp(/(\\\\n)+/g), '\\n');\n          self.setState({result : [{name, lyric}], searchLoader : true, fetchData : true}, ()=> {\n            self.setState({searchLoader : false})\n          })\n        });\n      }else{\n        self.setState({isResult : true, fetchData : false})\n      }\n      }); \n  }\n\n  render() {\n    let {result, searchLoader, fetchData, isResult} = this.state\n    return (\n      <div className='container'>\n        <h2>Lyrics Finder</h2>\n        <p>Find Lyrics for any stavan</p>\n\n        <InputGroup>\n        <Input placeholder=\"Search by stavan name...\" autoFocus value={this.state.value} onChange={this.handleInput.bind(this)}\n         onKeyPress={this.onInputKeyPress} />\n        <InputGroupAddon addonType=\"append\">\n          <Button color=\"primary\" onClick={this.handleSearch}>Search</Button>\n        </InputGroupAddon>\n      </InputGroup>\n\n        { searchLoader ? \n            fetchData \n            ? \n              <div><img src =\"/static/loader.gif\" alt='' width='100px' height='100px'></img></div>\n            : \n              !isResult ? null : \n                <Container>\n                <Row>\n                  <Col>\n                    <h3><Badge color='danger'>{'We currently do not have \\n any lyrics for this song.'}</Badge></h3>\n                  </Col>\n                </Row>\n                </Container>\n          : \n          <div>\n            <h2><div className='header'>{result[0].name.toUpperCase()}</div></h2>\n            <div className=\"result\">{result[0].lyric.toLowerCase()}</div>\n            </div>\n        }\n      </div>)\n  }\n}\n  export default Home;"]},"metadata":{},"sourceType":"module"}