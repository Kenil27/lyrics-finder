{"version":3,"file":"static/webpack/static/development/pages/index.js.b8dcf76cdeb875756c89.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React from \"react\";\nimport { app, auth, db } from \"../utils/firebase\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../style.css\";\nimport {\n  InputGroup,\n  InputGroupAddon,\n  Button,\n  Input,\n  Container,\n  Row,\n  Col,\n  Alert\n} from \"reactstrap\";\n\nclass Home extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      value: \"\",\n      result: [{ name: \"\", lyric: \"\" }],\n      searchLoader: true,\n      isResult: false,\n      fetchData: false,\n      list : ['garvo girnar', 'saiyam kyare malse', 'saiyam sachu che', 'gaaje re aaje']\n    }\n    this.fetchList();\n  };\n\n  // fetchList = () => {\n  //   let {list} = this.state;\n  //   let search = db\n  //     .collection(\"stavan\");\n\n  //   search.get().then(querySnapshot => {\n  //     if (querySnapshot.docs.length > 0) {\n  //       querySnapshot.forEach(doc => {\n  //         const { name } = doc.data();\n  //         list.push(name);\n  //       });\n  //     }\n  //   });\n  //   this.setState({list});\n  // }\n\n  componentDidMount = () => {\n    auth.signInAnonymously().catch(function(error) {\n      this.errorMessage = error.message;\n    });\n    this.listenToAuth();\n  };\n\n  listenToAuth = () => {\n    app.auth().onAuthStateChanged(user => {\n      if (user) {\n        // User is signed in.\n        this.userId = user.uid;\n      } else {\n        // User is signed out.\n        this.userId = null;\n      }\n    });\n  };\n\n  handleInput = event => {\n    this.setState({ value: event.target.value });\n    if (event.target.value === \"\") {\n      this.setState({ isResult: false });\n    }\n  };\n\n  onInputKeyPress = e => {\n    // on pressing enter\n    if (e.which === 13) {\n      this.handleSearch();\n    }\n  };\n\n  handleSearch = () => {\n    var self = this;\n    self.setState({ searchLoader: true, isResult: false, fetchData: true });\n    let res = db\n      .collection(\"stavan\")\n      .where(\"name\", \"==\", `${this.state.value.toLowerCase()}`);\n\n    res.get().then(querySnapshot => {\n      if (querySnapshot.docs.length > 0) {\n        querySnapshot.forEach(doc => {\n          const { name, lyrics } = doc.data();\n          let lyric = lyrics.replace(new RegExp(/(\\\\n)+/g), \"\\n\");\n          self.setState(\n            { result: [{ name, lyric }], searchLoader: true, fetchData: true },\n            () => {\n              self.setState({ searchLoader: false });\n            }\n          );\n        });\n      } else {\n        self.setState({ isResult: true, fetchData: false });\n      }\n    });\n  };\n\n  render() {\n    let { result, searchLoader, fetchData, isResult, list, value } = this.state;\n\n    let filteredList = list.filter((element)=>{\n      if((element.indexOf(value.toLowerCase())) > -1){\n        return element;\n      }\n   })\n    return (\n      <div className=\"container\">\n        <h2>Lyrics Finder</h2>\n        <p>Find Lyrics for any stavan</p>\n\n        <InputGroup>\n          <Input\n            placeholder=\"Search by stavan name...\"\n            autoFocus\n            value={this.state.value}\n            onChange={this.handleInput.bind(this)}\n            onKeyPress={this.onInputKeyPress}\n          />\n          <InputGroupAddon addonType=\"append\">\n            <Button color=\"primary\" onClick={this.handleSearch}>\n              Search\n            </Button>\n          </InputGroupAddon>\n        </InputGroup>\n\n        {filteredList.map((name)=>{\n          return name\n        })}\n        {searchLoader ? (\n          fetchData ? (\n            <div>\n              <img\n                src=\"./static/loader.gif\"\n                alt=\"\"\n                width=\"100px\"\n                height=\"100px\"\n              />\n            </div>\n          ) : !isResult ? null : (\n            <Container>\n              <Row>\n                <Col style={{ paddingTop : '15px'}}>\n                    <Alert color=\"info\">\n                      We currently do not have any lyrics for this stavan.\n                    </Alert>\n                </Col>\n              </Row>\n            </Container>\n          )\n        ) : (\n          <div>\n            <h2>{result[0].name.toUpperCase()}</h2>\n            <div className=\"result\">{result[0].lyric.toLowerCase()}</div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAUA;AACA;AACA;AACA;AAFA;AA8BA;AACA;AACA;AACA;AACA;AACA;AAnCA;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/CA;AAiDA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAtDA;AAwDA;AACA;AACA;AACA;AACA;AACA;AA7DA;AA+DA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AApFA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AA2EA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AArJA;AACA;AAsJA;;;;A","sourceRoot":""}