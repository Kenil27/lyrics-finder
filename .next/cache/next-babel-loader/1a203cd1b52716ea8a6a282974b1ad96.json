{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/kenil/kenil/lyrics/pages/index.js\";\nimport React from \"react\";\nimport getConfig from 'next/config';\nimport { app, auth, db } from \"../utils/firebase\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../style.css\";\nimport { InputGroup, InputGroupAddon, Button, Input, Container, Row, Col, Badge } from \"reactstrap\";\nconst {\n  publicRuntimeConfig\n} = getConfig();\n\nclass Home extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      value: \"\",\n      result: [{\n        name: \"\",\n        lyric: \"\"\n      }],\n      searchLoader: true,\n      isResult: false,\n      fetchData: false\n    });\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      auth.signInAnonymously().catch(function (error) {\n        this.errorMessage = error.message;\n      });\n      this.listenToAuth();\n    });\n\n    _defineProperty(this, \"listenToAuth\", () => {\n      app.auth().onAuthStateChanged(user => {\n        if (user) {\n          // User is signed in.\n          this.userId = user.uid;\n        } else {\n          // User is signed out.\n          this.userId = null;\n        }\n      });\n    });\n\n    _defineProperty(this, \"handleInput\", event => {\n      this.setState({\n        value: event.target.value\n      });\n\n      if (event.target.value === \"\") {\n        this.setState({\n          isResult: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"onInputKeyPress\", e => {\n      // on pressing enter\n      if (e.which === 13) {\n        this.handleSearch();\n      }\n    });\n\n    _defineProperty(this, \"handleSearch\", () => {\n      var self = this;\n      self.setState({\n        searchLoader: true,\n        isResult: false,\n        fetchData: true\n      });\n      let res = db.collection(\"stavan\").where(\"name\", \"==\", \"\".concat(this.state.value.toLowerCase()));\n      res.get().then(querySnapshot => {\n        if (querySnapshot.docs.length > 0) {\n          querySnapshot.forEach(doc => {\n            const {\n              name,\n              lyrics\n            } = doc.data();\n            let lyric = lyrics.replace(new RegExp(/(\\\\n)+/g), \"\\n\");\n            self.setState({\n              result: [{\n                name,\n                lyric\n              }],\n              searchLoader: true,\n              fetchData: true\n            }, () => {\n              self.setState({\n                searchLoader: false\n              });\n            });\n          });\n        } else {\n          self.setState({\n            isResult: true,\n            fetchData: false\n          });\n        }\n      });\n    });\n  }\n\n  render() {\n    let {\n      result,\n      searchLoader,\n      fetchData,\n      isResult\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Lyrics Finder\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Find Lyrics for any stavan\"), React.createElement(InputGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Input, {\n      placeholder: \"Search by stavan name...\",\n      autoFocus: true,\n      value: this.state.value,\n      onChange: this.handleInput.bind(this),\n      onKeyPress: this.onInputKeyPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(InputGroupAddon, {\n      addonType: \"append\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: this.handleSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Search\"))), searchLoader ? fetchData ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"\".concat(publicRuntimeConfig.staticFolder, \"/loader.gif\"),\n      alt: \"\",\n      width: \"100px\",\n      height: \"100px\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })) : !isResult ? null : React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Badge, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"We currently do not have \\n any lyrics for this stavan.\"))))) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, result[0].name.toUpperCase()), React.createElement(\"div\", {\n      className: \"result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, result[0].lyric.toLowerCase())));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/kenil/kenil/lyrics/pages/index.js"],"names":["React","getConfig","app","auth","db","InputGroup","InputGroupAddon","Button","Input","Container","Row","Col","Badge","publicRuntimeConfig","Home","Component","value","result","name","lyric","searchLoader","isResult","fetchData","signInAnonymously","catch","error","errorMessage","message","listenToAuth","onAuthStateChanged","user","userId","uid","event","setState","target","e","which","handleSearch","self","res","collection","where","state","toLowerCase","get","then","querySnapshot","docs","length","forEach","doc","lyrics","data","replace","RegExp","render","handleInput","bind","onInputKeyPress","staticFolder","toUpperCase"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport getConfig from 'next/config';\nimport { app, auth, db } from \"../utils/firebase\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../style.css\";\nimport {\n  InputGroup,\n  InputGroupAddon,\n  Button,\n  Input,\n  Container,\n  Row,\n  Col,\n  Badge\n} from \"reactstrap\";\n\nconst { publicRuntimeConfig } = getConfig();\n\nclass Home extends React.Component {\n  state = {\n    value: \"\",\n    result: [{ name: \"\", lyric: \"\" }],\n    searchLoader: true,\n    isResult: false,\n    fetchData: false\n  };\n\n  componentDidMount = () => {\n    auth.signInAnonymously().catch(function(error) {\n      this.errorMessage = error.message;\n    });\n    this.listenToAuth();\n  };\n\n  listenToAuth = () => {\n    app.auth().onAuthStateChanged(user => {\n      if (user) {\n        // User is signed in.\n        this.userId = user.uid;\n      } else {\n        // User is signed out.\n        this.userId = null;\n      }\n    });\n  };\n\n  handleInput = event => {\n    this.setState({ value: event.target.value });\n    if (event.target.value === \"\") {\n      this.setState({ isResult: false });\n    }\n  };\n\n  onInputKeyPress = e => {\n    // on pressing enter\n    if (e.which === 13) {\n      this.handleSearch();\n    }\n  };\n\n  handleSearch = () => {\n    var self = this;\n    self.setState({ searchLoader: true, isResult: false, fetchData: true });\n    let res = db\n      .collection(\"stavan\")\n      .where(\"name\", \"==\", `${this.state.value.toLowerCase()}`);\n\n    res.get().then(querySnapshot => {\n      if (querySnapshot.docs.length > 0) {\n        querySnapshot.forEach(doc => {\n          const { name, lyrics } = doc.data();\n          let lyric = lyrics.replace(new RegExp(/(\\\\n)+/g), \"\\n\");\n          self.setState(\n            { result: [{ name, lyric }], searchLoader: true, fetchData: true },\n            () => {\n              self.setState({ searchLoader: false });\n            }\n          );\n        });\n      } else {\n        self.setState({ isResult: true, fetchData: false });\n      }\n    });\n  };\n\n  render() {\n    let { result, searchLoader, fetchData, isResult } = this.state;\n    return (\n      <div className=\"container\">\n        <h2>Lyrics Finder</h2>\n        <p>Find Lyrics for any stavan</p>\n\n        <InputGroup>\n          <Input\n            placeholder=\"Search by stavan name...\"\n            autoFocus\n            value={this.state.value}\n            onChange={this.handleInput.bind(this)}\n            onKeyPress={this.onInputKeyPress}\n          />\n          <InputGroupAddon addonType=\"append\">\n            <Button color=\"primary\" onClick={this.handleSearch}>\n              Search\n            </Button>\n          </InputGroupAddon>\n        </InputGroup>\n\n        {searchLoader ? (\n          fetchData ? (\n            <div>\n              <img\n                src={`${publicRuntimeConfig.staticFolder}/loader.gif`}\n                alt=\"\"\n                width=\"100px\"\n                height=\"100px\"\n              />\n            </div>\n          ) : !isResult ? null : (\n            <Container>\n              <Row>\n                <Col>\n                  <h2>\n                    <Badge color=\"danger\">\n                      {\n                        \"We currently do not have \\n any lyrics for this stavan.\"\n                      }\n                    </Badge>\n                  </h2>\n                </Col>\n              </Row>\n            </Container>\n          )\n        ) : (\n          <div>\n            <h2>{result[0].name.toUpperCase()}</h2>\n            <div className=\"result\">{result[0].lyric.toLowerCase()}</div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}