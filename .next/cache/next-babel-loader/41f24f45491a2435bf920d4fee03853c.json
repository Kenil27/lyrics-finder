{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from 'react';\nimport { app, auth, db } from '../Utils/firebase';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../style.css';\nimport { InputGroup, InputGroupAddon, Button, Input, Container, Row, Col, Badge } from 'reactstrap';\n\nvar Home =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  function Home() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Home)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      value: '',\n      result: [{\n        name: '',\n        lyric: ''\n      }],\n      searchLoader: true,\n      isResult: false,\n      fetchData: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"componentDidMount\", function () {\n      auth.signInAnonymously().catch(function (error) {\n        this.errorMessage = error.message;\n      });\n\n      _this.listenToAuth();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"listenToAuth\", function () {\n      app.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          // User is signed in.\n          _this.userId = user.uid;\n        } else {\n          // User is signed out.\n          _this.userId = null;\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleInput\", function (event) {\n      _this.setState({\n        value: event.target.value\n      });\n\n      if (event.target.value === '') {\n        _this.setState({\n          isResult: false\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onInputKeyPress\", function (e) {\n      // on pressing enter\n      if (e.which === 13) {\n        _this.handleSearch();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSearch\", function () {\n      var self = _assertThisInitialized(_this);\n\n      self.setState({\n        searchLoader: true,\n        isResult: false,\n        fetchData: true\n      });\n      var res = db.collection(\"stavan\").where(\"name\", \"==\", \"\".concat(_this.state.value.toLowerCase()));\n      res.get().then(function (querySnapshot) {\n        if (querySnapshot.docs.length > 0) {\n          querySnapshot.forEach(function (doc) {\n            var _doc$data = doc.data(),\n                name = _doc$data.name,\n                lyrics = _doc$data.lyrics;\n\n            var lyric = lyrics.replace(new RegExp(/(\\\\n)+/g), '\\n');\n            self.setState({\n              result: [{\n                name: name,\n                lyric: lyric\n              }],\n              searchLoader: true,\n              fetchData: true\n            }, function () {\n              self.setState({\n                searchLoader: false\n              });\n            });\n          });\n        } else {\n          self.setState({\n            isResult: true,\n            fetchData: false\n          });\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          result = _this$state.result,\n          searchLoader = _this$state.searchLoader,\n          fetchData = _this$state.fetchData,\n          isResult = _this$state.isResult;\n      return React.createElement(\"div\", {\n        className: \"container\"\n      }, React.createElement(\"h2\", null, \"Lyrics Finder\"), React.createElement(\"p\", null, \"Find Lyrics for any stavan\"), React.createElement(InputGroup, null, React.createElement(Input, {\n        placeholder: \"Search by stavan name...\",\n        autoFocus: true,\n        value: this.state.value,\n        onChange: this.handleInput.bind(this),\n        onKeyPress: this.onInputKeyPress\n      }), React.createElement(InputGroupAddon, {\n        addonType: \"append\"\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.handleSearch\n      }, \"Search\"))), searchLoader ? fetchData ? React.createElement(\"div\", null, React.createElement(\"img\", {\n        src: \"/static/loader.gif\",\n        alt: \"\",\n        width: \"100px\",\n        height: \"100px\"\n      })) : !isResult ? null : React.createElement(Container, null, React.createElement(Row, null, React.createElement(Col, null, React.createElement(\"h2\", null, React.createElement(Badge, {\n        color: \"danger\"\n      }, 'We currently do not have \\n any lyrics for this stavan.'))))) : React.createElement(\"div\", null, React.createElement(\"h2\", null, result[0].name.toUpperCase()), React.createElement(\"div\", {\n        className: \"result\"\n      }, result[0].lyric.toLowerCase())));\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nexport default Home;","map":null,"metadata":{},"sourceType":"module"}