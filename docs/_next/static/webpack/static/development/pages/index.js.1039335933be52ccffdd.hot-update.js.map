{"version":3,"file":"static/webpack/static/development/pages/index.js.1039335933be52ccffdd.hot-update.js","sources":["webpack:///./Utils/firebase.js","webpack:///./pages/index.js"],"sourcesContent":["import app from 'firebase/app';\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n    apiKey: \"AIzaSyDK8iBShvK_MyyHCyVLmoSsoBk6295IrrQ\",\n    authDomain: \"react-firebase-7e1a7.firebaseapp.com\",\n    databaseURL: \"https://react-firebase-7e1a7.firebaseio.com\",\n    projectId: \"react-firebase-7e1a7\",\n    storageBucket: \"\",\n    messagingSenderId: \"179179280724\",\n    appId: \"1:179179280724:web:10a41c07b79b0789\"\n  };\n\n// let isInitialized = false\nlet db\nlet auth\n\nconst settings = { /* your settings... */ timestampsInSnapshots: true };\n\n// function initialize() {\n  if (!app.apps.length) {\n    app.initializeApp(config);\n\n    auth = app.auth();\n\n    db = app.firestore();\n    db.settings(settings);\n\n    // isInitialized = true\n  }\n// }\n\n// initialize()\n\nexport {\n  app,\n  auth,\n  db,\n}","import React from 'react';\nimport {app,auth,db} from '../Utils/firebase';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport '../style.css';\nimport { InputGroup, InputGroupAddon, Button, Input, Container, Row, Col , Badge} from 'reactstrap';\n\nclass Home extends React.Component {\n  state = {\n    value : '',\n    result: [{name : '', lyric : ''}], \n    searchLoader : true, \n    isResult : false, \n    fetchData : false\n  }\n\n  componentDidMount = () => {\n    auth.signInAnonymously().catch(function(error) {\n      this.errorMessage = error.message\n    });\n    this.listenToAuth() \n  } \n  \n  listenToAuth = () => {\n    app.auth().onAuthStateChanged((user) => {\n      if (user) {    \n        // User is signed in.\n        this.userId = user.uid;\n      } else {\n        // User is signed out.\n        this.userId = null\n      }\n    });\n  }\n\n  handleInput = (event) =>{\n    this.setState({value : event.target.value})\n    if(event.target.value === ''){\n      this.setState({isResult: false})\n    }\n  }\n\n  onInputKeyPress = (e) => {\n    // on pressing enter\n    if(e.which === 13){\n      this.handleSearch()\n    }\n  }\n\n  handleSearch = () =>{\n    var self = this;\n    self.setState({searchLoader : true, isResult : false, fetchData : true})\n      let res= db.collection(\"stavan\").where(\"name\" , \"==\", `${this.state.value.toLowerCase()}`)\n\n      res.get()\n      .then(querySnapshot => {\n        if(querySnapshot.docs.length > 0){\n        querySnapshot.forEach(doc => {\n          const { name, lyrics } = doc.data()\n          let lyric = lyrics.replace(new RegExp(/(\\\\n)+/g), '\\n');\n          self.setState({result : [{name, lyric}], searchLoader : true, fetchData : true}, ()=> {\n            self.setState({searchLoader : false})\n          })\n        });\n      }else{\n        self.setState({isResult : true, fetchData : false})\n      }\n      }); \n  }\n\n  render() {\n    let {result, searchLoader, fetchData, isResult} = this.state\n    return (\n      <div className='container'>\n        <h2>Lyrics Finder</h2>\n        <p>Find Lyrics for any stavan</p>\n\n        <InputGroup>\n        <Input placeholder=\"Search by stavan name...\" autoFocus value={this.state.value} onChange={this.handleInput.bind(this)}\n         onKeyPress={this.onInputKeyPress} />\n        <InputGroupAddon addonType=\"append\">\n          <Button color=\"primary\" onClick={this.handleSearch}>Search</Button>\n        </InputGroupAddon>\n      </InputGroup>\n\n        { searchLoader ? \n            fetchData \n            ? \n              <div><img src =\"/static/loader.gif\" alt='' width='100px' height='100px'></img></div>\n            : \n              !isResult ? null : \n                <Container>\n                <Row>\n                  <Col>\n                    <h2><Badge color='danger'>{'We currently do not have \\n any lyrics for this stavan.'}</Badge></h2>\n                  </Col>\n                </Row>\n                </Container>\n          : \n          <div>\n            <h2>{result[0].name.toUpperCase()}</h2>\n            <div className=\"result\">{result[0].lyric.toLowerCase()}</div>\n            </div>\n        }\n      </div>)\n  }\n}\n  export default Home;"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AAUA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAGA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AALA;AACA;AAFA;AAUA;AACA;AACA;AACA;AACA;AACA;AAfA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA;AA6BA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAlCA;AAoCA;AACA;AACA;AACA;AACA;AACA;AAzCA;AA2CA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AA7DA;AACA;AA8DA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAnGA;AACA;AAmGA;;;;A","sourceRoot":""}